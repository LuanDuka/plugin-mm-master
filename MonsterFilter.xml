<?xml version="1.0" encoding="UTF-8"?>
<form name="frmMonsters" align="client" class="fundo">
	<script>
  </script>

    <popup name="popDescrition" width="200" height="200" backOpacity="0.4">
    <textEditor align="client" field="description"/>
  </popup>

  <layout align="bottom" height="25">
    <button align="left" horzTextAlign="center" width="375" text="Filter">
      <event name="onClick">
        if self.scope.node==nil then return end;
				toolSheet.filteredMonsters = {};
				local index = 0;

        for k,v in pairs(monsterListDataS.db) do
          local monster = monsterListDataS.db[k];

          if toolSheet.enableName then
              local isName = filterName(monster);
              if not isName then 
                --write(monster.name .. " falhou no filtro de isName");
                goto nextmonster 
              end;
            end;

          if toolSheet.enableTypes then
						local isType = filterType(monster);
						if not isType then 
							--write(monster.name .. " falhou no filtro de isType");
							goto nextmonster 
						end;
					end;
          
          index = index +1;
					toolSheet.filteredMonsters[index] = monster;
					::nextmonster::
        end

        --write(index);

        -- Save quantity filted monsters and pages
				toolSheet.numMonsters = index;
				toolSheet.maxMonsterPages = math.ceil(index/50);	

        -- Delete all monsters from actual list
		        local toDelete = NDB.getChildNodes(toolSheet.monsterList); 
		        for i=1, #toDelete, 1 do
		            NDB.deleteNode(toDelete[i]);
		        end;

		        -- Fill new list with first 50 monsters
		        local limit = math.min(index, 50);

				for i=1, limit, 1 do
					local monster = self.monsterList:append();

          if toolSheet.filteredMonsters[i].description then 
						monster.description = toolSheet.filteredMonsters[i].description;
					end;

          monster.name = toolSheet.filteredMonsters[i].name;
					local nome = tryLang(toolSheet.filteredMonsters[i].name);
					if nome ~= nil then monster.name = monster.name .. " - " .. nome end;

          monster.size= "Tamanho:" .. trans(toolSheet.filteredMonsters[i].size);
          monster.type= "Tipo:" .. trans(toolSheet.filteredMonsters[i].type);
          monster.alignment= "Alinhamento:" .. trans(toolSheet.filteredMonsters[i].alignment);
          monster.armorClass= "Classe de Armadura:" .. trans(toolSheet.filteredMonsters[i].armorClass);
          monster.hitPoints= "Pontos de Vida:" .. trans(toolSheet.filteredMonsters[i].size);

        end;

        self.monsterList:sort();
        toolSheet.MonstersPage=1;

        self.monsterListTab:setFocus();
      </event>
    </button>
  </layout>

  <scrollBox align="client">
    <layout align="top" height="25">
      <checkBox align="left" width="75" horzTextAlign="center" text="Name" field="enableName" margins="{right=25, bottom=5, top=5}" />
      <edit align="left" width="275" field="nameFilter"/>
    </layout>


  </scrollBox>

</form>
